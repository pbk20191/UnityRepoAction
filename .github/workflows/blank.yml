# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_GITHUB }}
          submodules: true

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: iOS
          unityVersion: 6000.0.28f1
          projectPath: vendor
          buildMethod: BuildScript.UniversaliOS

      - name: Set up build environment
        run: |
            export IOS_DEVICE_PROJECT_PATH="vendor/Build/iOS_Device"
            export IOS_SIMULATOR_PROJECT_PATH="vendor/Build/iOS_Simulator"
            export ARCHIVE_PATH="vendor/Build/archives"
            export DEVICE_ARCHIVE_PATH="${ARCHIVE_PATH}/iOS_Device.xcarchive"
            export SIMULATOR_ARCHIVE_PATH="${ARCHIVE_PATH}/iOS_Simulator.xcarchive"
            export XCFRAMEWORK_NAME="UnityFramework.xcframework"
            export XCFRAMEWORK_PATH="${ARCHIVE_PATH}/${XCFRAMEWORK_NAME}"

      - name: Build UnityFramework for iOS Device
        run: |
          xcodebuild -project "${IOS_DEVICE_PROJECT_PATH}/Unity-iPhone.xcodeproj" \
            -scheme UnityFramework \
            -configuration Release \
            -sdk iphoneos \
            BUILD_LIBRARIES_FOR_DISTRIBUTION=YES \
            -archivePath "${DEVICE_ARCHIVE_PATH}" \
            SKIP_INSTALL=NO \
            LLVM_LTO=YES \
            archive

      - name: Build UnityFramework for iOS Simulator
        run: |
          xcodebuild -project "${IOS_SIMULATOR_PROJECT_PATH}/Unity-iPhone.xcodeproj" \
            -scheme UnityFramework \
            -configuration Release \
            -sdk iphonesimulator \
            BUILD_LIBRARIES_FOR_DISTRIBUTION=YES \
            -archivePath "${SIMULATOR_ARCHIVE_PATH}" \
            SKIP_INSTALL=NO \
            LLVM_LTO=YES \
            archive

      - name: Create XCFramework
        run: |
            xcodebuild -create-xcframework \
            -archive "${DEVICE_ARCHIVE_PATH}" -framework UnityFramework.framework \
            -archive "${SIMULATOR_ARCHIVE_PATH}" -framework UnityFramework.framework \
            -output "${XCFRAMEWORK_PATH}"

      - name: Verify XCFramework
        run: |
            ls -al "${XCFRAMEWORK_PATH}"
